// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

type PageDocumentDataSlicesSlice =
  | WorkHighlightsGridSlice
  | StackedHeadingsSlice
  | MediaCtaWithFeaturedContentSlice
  | PersonalMessageSlice
  | SplitTextMediaSlice
  | HighlightedHeadingSlice
  | HeadlineSlice
  | HeroContentCenteredSlice
  | ContactFormSlice
  | HeadingListSlice
  | CenteredDescriptionSlice;

/**
 * Content for Page documents
 */
interface PageDocumentData {
  /**
   * Title field in *Page*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: page.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * Slice Zone field in *Page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<PageDocumentDataSlicesSlice> /**
   * Meta Title field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: page.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: page.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: page.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;

/**
 * Item in *Settings → Items*
 */
export interface SettingsDocumentDataItemsItem {
  /**
   * Links field in *Settings → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.items[].links
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  links: prismic.Repeatable<
    prismic.LinkField<string, string, unknown, prismic.FieldState, never>
  >;
}

/**
 * Content for Settings documents
 */
interface SettingsDocumentData {
  /**
   * Items field in *Settings*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.items[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  items: prismic.GroupField<Simplify<SettingsDocumentDataItemsItem>>;

  /**
   * Location field in *Settings*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.location
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  location: prismic.KeyTextField;

  /**
   * Socials field in *Settings*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.socials
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  socials: prismic.Repeatable<
    prismic.LinkField<string, string, unknown, prismic.FieldState, never>
  >;

  /**
   * Footer Text field in *Settings*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.footer_text
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  footer_text: prismic.KeyTextField;
}

/**
 * Settings document from Prismic
 *
 * - **API ID**: `settings`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SettingsDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<SettingsDocumentData>,
    "settings",
    Lang
  >;

export type AllDocumentTypes = PageDocument | SettingsDocument;

/**
 * Primary content in *CenteredDescription → Default → Primary*
 */
export interface CenteredDescriptionSliceDefaultPrimary {
  /**
   * Description field in *CenteredDescription → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: centered_description.default.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;
}

/**
 * Default variation for CenteredDescription Slice
 *
 * - **API ID**: `default`
 * - **Description**: Single centered description paragraph with optional line breaks.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CenteredDescriptionSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CenteredDescriptionSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *CenteredDescription*
 */
type CenteredDescriptionSliceVariation = CenteredDescriptionSliceDefault;

/**
 * CenteredDescription Shared Slice
 *
 * - **API ID**: `centered_description`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CenteredDescriptionSlice = prismic.SharedSlice<
  "centered_description",
  CenteredDescriptionSliceVariation
>;

/**
 * Primary content in *ContactForm → Default → Primary*
 */
export interface ContactFormSliceDefaultPrimary {
  /**
   * Title field in *ContactForm → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: contact_form.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * Agreement Text field in *ContactForm → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: contact_form.default.primary.agreement_text
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  agreement_text: prismic.RichTextField;
}

/**
 * Default variation for ContactForm Slice
 *
 * - **API ID**: `default`
 * - **Description**: A standard contact form layout with title, fields for user data, agreement checkbox, and a call-to-action button.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ContactFormSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ContactFormSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *ContactForm*
 */
type ContactFormSliceVariation = ContactFormSliceDefault;

/**
 * ContactForm Shared Slice
 *
 * - **API ID**: `contact_form`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ContactFormSlice = prismic.SharedSlice<
  "contact_form",
  ContactFormSliceVariation
>;

/**
 * Item in *HeadingList → Default → Primary → Items*
 */
export interface HeadingListSliceDefaultPrimaryItemsItem {
  /**
   * Text field in *HeadingList → Default → Primary → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: heading_list.default.primary.items[].text
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  text: prismic.KeyTextField;
}

/**
 * Primary content in *HeadingList → Default → Primary*
 */
export interface HeadingListSliceDefaultPrimary {
  /**
   * Title field in *HeadingList → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: heading_list.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * Items field in *HeadingList → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: heading_list.default.primary.items[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  items: prismic.GroupField<Simplify<HeadingListSliceDefaultPrimaryItemsItem>>;
}

/**
 * Default variation for HeadingList Slice
 *
 * - **API ID**: `default`
 * - **Description**: Standard heading with associated key points in a visual list.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeadingListSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeadingListSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *HeadingList*
 */
type HeadingListSliceVariation = HeadingListSliceDefault;

/**
 * HeadingList Shared Slice
 *
 * - **API ID**: `heading_list`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeadingListSlice = prismic.SharedSlice<
  "heading_list",
  HeadingListSliceVariation
>;

/**
 * Item in *Headline → Centered Large → Primary → Items*
 */
export interface HeadlineSliceCenteredLargePrimaryItemsItem {
  /**
   * Title field in *Headline → Centered Large → Primary → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: headline.centered_large.primary.items[].title
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Link field in *Headline → Centered Large → Primary → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: headline.centered_large.primary.items[].link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  link: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;

  /**
   * Icon field in *Headline → Centered Large → Primary → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: headline.centered_large.primary.items[].icon
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  icon: prismic.KeyTextField;
}

/**
 * Primary content in *Headline → Centered Large → Primary*
 */
export interface HeadlineSliceCenteredLargePrimary {
  /**
   * Items field in *Headline → Centered Large → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: headline.centered_large.primary.items[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  items: prismic.GroupField<
    Simplify<HeadlineSliceCenteredLargePrimaryItemsItem>
  >;
}

/**
 * Centered Large variation for Headline Slice
 *
 * - **API ID**: `centered_large`
 * - **Description**: A large, center-aligned, statement-style headline designed to catch the user's attention.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeadlineSliceCenteredLarge = prismic.SharedSliceVariation<
  "centered_large",
  Simplify<HeadlineSliceCenteredLargePrimary>,
  never
>;

/**
 * Slice variation for *Headline*
 */
type HeadlineSliceVariation = HeadlineSliceCenteredLarge;

/**
 * Headline Shared Slice
 *
 * - **API ID**: `headline`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeadlineSlice = prismic.SharedSlice<
  "headline",
  HeadlineSliceVariation
>;

/**
 * Primary content in *HeroContentCentered → Default → Primary*
 */
export interface HeroContentCenteredSliceDefaultPrimary {
  /**
   * Title field in *HeroContentCentered → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_content_centered.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * Subtitle field in *HeroContentCentered → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_content_centered.default.primary.subtitle
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  subtitle: prismic.RichTextField;

  /**
   * Description field in *HeroContentCentered → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_content_centered.default.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;
}

/**
 * Default variation for HeroContentCentered Slice
 *
 * - **API ID**: `default`
 * - **Description**: Single hero variant with title, subtitle, and supporting description, all vertically centered.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroContentCenteredSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroContentCenteredSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *HeroContentCentered*
 */
type HeroContentCenteredSliceVariation = HeroContentCenteredSliceDefault;

/**
 * HeroContentCentered Shared Slice
 *
 * - **API ID**: `hero_content_centered`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroContentCenteredSlice = prismic.SharedSlice<
  "hero_content_centered",
  HeroContentCenteredSliceVariation
>;

/**
 * Primary content in *HighlightedHeading → Default → Primary*
 */
export interface HighlightedHeadingSliceDefaultPrimary {
  /**
   * Subtitle (De-emphasized) field in *HighlightedHeading → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: highlighted_heading.default.primary.subtitle
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  subtitle: prismic.RichTextField;

  /**
   * Title (Main Heading) field in *HighlightedHeading → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: highlighted_heading.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;
}

/**
 * Default variation for HighlightedHeading Slice
 *
 * - **API ID**: `default`
 * - **Description**: Main heading text with optional visually de-emphasized subheading above.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HighlightedHeadingSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HighlightedHeadingSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *HighlightedHeading*
 */
type HighlightedHeadingSliceVariation = HighlightedHeadingSliceDefault;

/**
 * HighlightedHeading Shared Slice
 *
 * - **API ID**: `highlighted_heading`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HighlightedHeadingSlice = prismic.SharedSlice<
  "highlighted_heading",
  HighlightedHeadingSliceVariation
>;

/**
 * Item in *MediaCtaWithFeaturedContent → Default → Primary → Featured Content*
 */
export interface MediaCtaWithFeaturedContentSliceDefaultPrimaryFeaturedContentItem {
  /**
   * Image field in *MediaCtaWithFeaturedContent → Default → Primary → Featured Content*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: media_cta_with_featured_content.default.primary.featured_content[].image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * Eyebrow field in *MediaCtaWithFeaturedContent → Default → Primary → Featured Content*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: media_cta_with_featured_content.default.primary.featured_content[].eyebrow
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  eyebrow: prismic.KeyTextField;

  /**
   * Title field in *MediaCtaWithFeaturedContent → Default → Primary → Featured Content*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: media_cta_with_featured_content.default.primary.featured_content[].title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * CTA Link field in *MediaCtaWithFeaturedContent → Default → Primary → Featured Content*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: media_cta_with_featured_content.default.primary.featured_content[].cta_link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  cta_link: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Primary content in *MediaCtaWithFeaturedContent → Default → Primary*
 */
export interface MediaCtaWithFeaturedContentSliceDefaultPrimary {
  /**
   * Media Title field in *MediaCtaWithFeaturedContent → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: media_cta_with_featured_content.default.primary.media_title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  media_title: prismic.RichTextField;

  /**
   * icons field in *MediaCtaWithFeaturedContent → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: media_cta_with_featured_content.default.primary.icons
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  icons: prismic.KeyTextField;

  /**
   * Media Description field in *MediaCtaWithFeaturedContent → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: media_cta_with_featured_content.default.primary.media_description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  media_description: prismic.RichTextField;

  /**
   * Media Links field in *MediaCtaWithFeaturedContent → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: media_cta_with_featured_content.default.primary.media_links
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  media_links: prismic.Repeatable<
    prismic.LinkField<string, string, unknown, prismic.FieldState, never>
  >;

  /**
   * Image field in *MediaCtaWithFeaturedContent → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: media_cta_with_featured_content.default.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * Featured Content field in *MediaCtaWithFeaturedContent → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: media_cta_with_featured_content.default.primary.featured_content[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  featured_content: prismic.GroupField<
    Simplify<MediaCtaWithFeaturedContentSliceDefaultPrimaryFeaturedContentItem>
  >;
}

/**
 * Default variation for MediaCtaWithFeaturedContent Slice
 *
 * - **API ID**: `default`
 * - **Description**: Standard layout with a large call-to-action on the left and stacked highlight cards on the right.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type MediaCtaWithFeaturedContentSliceDefault =
  prismic.SharedSliceVariation<
    "default",
    Simplify<MediaCtaWithFeaturedContentSliceDefaultPrimary>,
    never
  >;

/**
 * Slice variation for *MediaCtaWithFeaturedContent*
 */
type MediaCtaWithFeaturedContentSliceVariation =
  MediaCtaWithFeaturedContentSliceDefault;

/**
 * MediaCtaWithFeaturedContent Shared Slice
 *
 * - **API ID**: `media_cta_with_featured_content`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type MediaCtaWithFeaturedContentSlice = prismic.SharedSlice<
  "media_cta_with_featured_content",
  MediaCtaWithFeaturedContentSliceVariation
>;

/**
 * Primary content in *PersonalMessage → Three Column Message → Primary*
 */
export interface PersonalMessageSliceThreeColumnMessagePrimary {
  /**
   * Heading field in *PersonalMessage → Three Column Message → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: personal_message.three_column_message.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * Text field in *PersonalMessage → Three Column Message → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: personal_message.three_column_message.primary.text
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  text: prismic.RichTextField;
}

/**
 * Three Column Message variation for PersonalMessage Slice
 *
 * - **API ID**: `three_column_message`
 * - **Description**: A personal message with a large heading and body text divided into three columns, suitable for longer editorial or open letter sections.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type PersonalMessageSliceThreeColumnMessage =
  prismic.SharedSliceVariation<
    "three_column_message",
    Simplify<PersonalMessageSliceThreeColumnMessagePrimary>,
    never
  >;

/**
 * Slice variation for *PersonalMessage*
 */
type PersonalMessageSliceVariation = PersonalMessageSliceThreeColumnMessage;

/**
 * PersonalMessage Shared Slice
 *
 * - **API ID**: `personal_message`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type PersonalMessageSlice = prismic.SharedSlice<
  "personal_message",
  PersonalMessageSliceVariation
>;

/**
 * Item in *SplitTextMedia → Default → Primary → Items*
 */
export interface SplitTextMediaSliceDefaultPrimaryItemsItem {
  /**
   * Headline field in *SplitTextMedia → Default → Primary → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_text_media.default.primary.items[].headline
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  headline: prismic.KeyTextField;

  /**
   * Text field in *SplitTextMedia → Default → Primary → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_text_media.default.primary.items[].text
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  text: prismic.RichTextField;
}

/**
 * Primary content in *SplitTextMedia → Default → Primary*
 */
export interface SplitTextMediaSliceDefaultPrimary {
  /**
   * Title field in *SplitTextMedia → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_text_media.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * Body field in *SplitTextMedia → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_text_media.default.primary.body
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  body: prismic.RichTextField;

  /**
   * Items field in *SplitTextMedia → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: split_text_media.default.primary.items[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  items: prismic.GroupField<
    Simplify<SplitTextMediaSliceDefaultPrimaryItemsItem>
  >;
}

/**
 * Default variation for SplitTextMedia Slice
 *
 * - **API ID**: `default`
 * - **Description**: Text content on one side (with title and body) and a media/image on the other.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type SplitTextMediaSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<SplitTextMediaSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *SplitTextMedia*
 */
type SplitTextMediaSliceVariation = SplitTextMediaSliceDefault;

/**
 * SplitTextMedia Shared Slice
 *
 * - **API ID**: `split_text_media`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type SplitTextMediaSlice = prismic.SharedSlice<
  "split_text_media",
  SplitTextMediaSliceVariation
>;

/**
 * Item in *StackedHeadings → Default → Primary → Items*
 */
export interface StackedHeadingsSliceDefaultPrimaryItemsItem {
  /**
   * Title field in *StackedHeadings → Default → Primary → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: stacked_headings.default.primary.items[].title
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Link field in *StackedHeadings → Default → Primary → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: stacked_headings.default.primary.items[].link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  link: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;

  /**
   * Icon field in *StackedHeadings → Default → Primary → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: stacked_headings.default.primary.items[].icon
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  icon: prismic.KeyTextField;
}

/**
 * Primary content in *StackedHeadings → Default → Primary*
 */
export interface StackedHeadingsSliceDefaultPrimary {
  /**
   * Icons field in *StackedHeadings → Default → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: stacked_headings.default.primary.icons
   * - **Documentation**: https://prismic.io/docs/fields/boolean
   */
  icons: prismic.BooleanField;

  /**
   * Items field in *StackedHeadings → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: stacked_headings.default.primary.items[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  items: prismic.GroupField<
    Simplify<StackedHeadingsSliceDefaultPrimaryItemsItem>
  >;
}

/**
 * Default variation for StackedHeadings Slice
 *
 * - **API ID**: `default`
 * - **Description**: Standard layout with multiple stacked headings, each as a separate field for flexibility.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type StackedHeadingsSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<StackedHeadingsSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *StackedHeadings*
 */
type StackedHeadingsSliceVariation = StackedHeadingsSliceDefault;

/**
 * StackedHeadings Shared Slice
 *
 * - **API ID**: `stacked_headings`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type StackedHeadingsSlice = prismic.SharedSlice<
  "stacked_headings",
  StackedHeadingsSliceVariation
>;

/**
 * Item in *WorkHighlightsGrid → Default → Primary → Projects Grid*
 */
export interface WorkHighlightsGridSliceDefaultPrimaryProjectsItem {
  /**
   * Project Category Short field in *WorkHighlightsGrid → Default → Primary → Projects Grid*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_highlights_grid.default.primary.projects[].project_category_short
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  project_category_short: prismic.KeyTextField;

  /**
   * Project Category Full field in *WorkHighlightsGrid → Default → Primary → Projects Grid*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_highlights_grid.default.primary.projects[].project_category_full
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  project_category_full: prismic.KeyTextField;

  /**
   * Project Highlight Title field in *WorkHighlightsGrid → Default → Primary → Projects Grid*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_highlights_grid.default.primary.projects[].project_title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  project_title: prismic.RichTextField;

  /**
   * Project Quote field in *WorkHighlightsGrid → Default → Primary → Projects Grid*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_highlights_grid.default.primary.projects[].project_quote
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  project_quote: prismic.RichTextField;

  /**
   * Project Services/Tags field in *WorkHighlightsGrid → Default → Primary → Projects Grid*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_highlights_grid.default.primary.projects[].project_services
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  project_services: prismic.KeyTextField;
}

/**
 * Primary content in *WorkHighlightsGrid → Default → Primary*
 */
export interface WorkHighlightsGridSliceDefaultPrimary {
  /**
   * Section Title field in *WorkHighlightsGrid → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_highlights_grid.default.primary.section_title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  section_title: prismic.RichTextField;

  /**
   * Section Introduction field in *WorkHighlightsGrid → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_highlights_grid.default.primary.section_intro
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  section_intro: prismic.RichTextField;

  /**
   * Section CTA/Note field in *WorkHighlightsGrid → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_highlights_grid.default.primary.section_cta
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  section_cta: prismic.RichTextField;

  /**
   * Projects Grid field in *WorkHighlightsGrid → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: work_highlights_grid.default.primary.projects[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  projects: prismic.GroupField<
    Simplify<WorkHighlightsGridSliceDefaultPrimaryProjectsItem>
  >;
}

/**
 * Default variation for WorkHighlightsGrid Slice
 *
 * - **API ID**: `default`
 * - **Description**: Full section with heading, intro, and a grid of project summaries/cards.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type WorkHighlightsGridSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<WorkHighlightsGridSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *WorkHighlightsGrid*
 */
type WorkHighlightsGridSliceVariation = WorkHighlightsGridSliceDefault;

/**
 * WorkHighlightsGrid Shared Slice
 *
 * - **API ID**: `work_highlights_grid`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type WorkHighlightsGridSlice = prismic.SharedSlice<
  "work_highlights_grid",
  WorkHighlightsGridSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      PageDocument,
      PageDocumentData,
      PageDocumentDataSlicesSlice,
      SettingsDocument,
      SettingsDocumentData,
      SettingsDocumentDataItemsItem,
      AllDocumentTypes,
      CenteredDescriptionSlice,
      CenteredDescriptionSliceDefaultPrimary,
      CenteredDescriptionSliceVariation,
      CenteredDescriptionSliceDefault,
      ContactFormSlice,
      ContactFormSliceDefaultPrimary,
      ContactFormSliceVariation,
      ContactFormSliceDefault,
      HeadingListSlice,
      HeadingListSliceDefaultPrimaryItemsItem,
      HeadingListSliceDefaultPrimary,
      HeadingListSliceVariation,
      HeadingListSliceDefault,
      HeadlineSlice,
      HeadlineSliceCenteredLargePrimaryItemsItem,
      HeadlineSliceCenteredLargePrimary,
      HeadlineSliceVariation,
      HeadlineSliceCenteredLarge,
      HeroContentCenteredSlice,
      HeroContentCenteredSliceDefaultPrimary,
      HeroContentCenteredSliceVariation,
      HeroContentCenteredSliceDefault,
      HighlightedHeadingSlice,
      HighlightedHeadingSliceDefaultPrimary,
      HighlightedHeadingSliceVariation,
      HighlightedHeadingSliceDefault,
      MediaCtaWithFeaturedContentSlice,
      MediaCtaWithFeaturedContentSliceDefaultPrimaryFeaturedContentItem,
      MediaCtaWithFeaturedContentSliceDefaultPrimary,
      MediaCtaWithFeaturedContentSliceVariation,
      MediaCtaWithFeaturedContentSliceDefault,
      PersonalMessageSlice,
      PersonalMessageSliceThreeColumnMessagePrimary,
      PersonalMessageSliceVariation,
      PersonalMessageSliceThreeColumnMessage,
      SplitTextMediaSlice,
      SplitTextMediaSliceDefaultPrimaryItemsItem,
      SplitTextMediaSliceDefaultPrimary,
      SplitTextMediaSliceVariation,
      SplitTextMediaSliceDefault,
      StackedHeadingsSlice,
      StackedHeadingsSliceDefaultPrimaryItemsItem,
      StackedHeadingsSliceDefaultPrimary,
      StackedHeadingsSliceVariation,
      StackedHeadingsSliceDefault,
      WorkHighlightsGridSlice,
      WorkHighlightsGridSliceDefaultPrimaryProjectsItem,
      WorkHighlightsGridSliceDefaultPrimary,
      WorkHighlightsGridSliceVariation,
      WorkHighlightsGridSliceDefault,
    };
  }
}
